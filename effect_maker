#!/bin/bash

### Values ##################################################

user_values=("0" "0" "0" "0" "0" "0" "0" "0" "0" "0" )
bank_effect=("leer" "leer" "leer" "leer" "leer" "leer" "leer" "leer" "leer" "leer")
bank_key=("a" "y" "s" "x" "d" "c" "f" "v" "g" "b" "h" "n" "j" "m" "k" "," "l" "." "รถ" "-")

### Decription ##############################################


### Function preload ########################################
function preload {
EFFECTS_FOLDER='effect_desc/'
ls $EFFECTS_FOLDER > /var/tmp/effect_maker

cat -n /var/tmp/effect_maker
printf '\nChoose an effect in integer :'
read CHOOSE_EFFECT
EFFECT_NAME=$(tail +$CHOOSE_EFFECT /var/tmp/effect_maker | head -1)

bank_effect[$1-1]=$EFFECT_NAME

EFFECT=( $( cat $EFFECTS_FOLDER""$EFFECT_NAME ) )

# reminder
# effect_options=()
# user_values=(0 0 0 0 0 0 0 0 0 0 )
# max_values=()
# step_size=()

index="${#EFFECT[*]}"
i=0
y=0
while [[ "$i" -lt "$index" ]]; do
	effect_options[$y]="${EFFECT[$i]}"
	max_values[$y]="${EFFECT[$i+1]}"
	step_size[$y]="${EFFECT[$i+2]}"
	user_values[$y]="${EFFECT[$i+3]}"
	i=$[$i+4]
	y=$[$y+1]
done

unset i
unset y
unset index
unset CHOOSE_EFFECT
}
### Function gui_balken #####################################
function gui_balken {
display_var_as_block "$1" "12"
display_var_as_block "$2" "12"
display_var_as_block "$3" "12"
printf "#\n"
}

### Function gui_text #####################################
function gui_text {
pos=$(echo "$1" |wc -m )
max=20
printf "#  "$1
while [[ "$pos" -lt "$max" ]]; do
	printf " "
	pos=$[$pos+1]
done
unset pos
unset max
}

### Function gui_bank ########################################
function gui_bank {
i=0
index=10
while [[ "$i" -lt "$index" ]]; do
	y=$[$i+1]
	if [[ "$y" -gt 9 ]]; then
		transport="$y"'.'"${bank_effect[$i]}"
	else
		transport="0$y"'.'"${bank_effect[$i]}"
	fi
	gui_text $transport
	if [[ "$i" = 3 || "$i" = 7 ]]; then
		printf "\n"
	fi
	i=$[$i+1]
done
printf "\n"
unset i
unset y
unset transport
}

### Function 
### line ()
### linebreak () 
### display_var_as_block (var, blocksize)
function line {
        i=0
        while [[ "$i" -lt 100 ]]; do
                printf "#"
                i=$[$i+1]
        done
        printf "\n"
	unset i
}
function lbr {
	i=0
	printf "#"
        while [[ "$i" -lt 98 ]]; do
                printf " "
                i=$[$i+1]
        done
	printf "#\n"
	unset i
}
function display_var_as_block {
printf "$1"
pos=$( echo "$1" | wc -m )
while [[ "$pos" -lt "$2" ]]; do
        printf " "
	pos=$[$pos+1]
done
unset pos
}

### Function header ########################################
function header {
	line
	lbr
	gui_bank
	lbr
	line
}
### Function footer ########################################

function footer {
	line
	lbr
	printf " $error1 \n"
	lbr
	line
}

### Function build gui #####################################

function build_gui {
lbr
# reminder
# effect_options=()
# user_values=(0 0 0 0 0 0 0 0 0 0 )
# max_values=()
# step_size=(
gui_text "Name"
gui_balken "Position" "Max Value" "Step Size"
i=0
index="${#effect_options[*]}"
while [[ "$i" -lt "$index" ]]; do
	gui_text "${effect_options[$i]}"
	gui_balken "${user_values[$i]}" "${max_values[$i]}" "${step_size[$i]}"
	i=$[$i+1]
done
lbr
unset i
unset index
}


### Function sox_play #####################################
function sox_play {
temp_effect="$EFFECT_NAME"
i=0
index="${#effect_options[*]}" 
while [[ "$i" -lt "$index" ]]; do
	if [[ $( echo "${user_values[$i]} < 1 " |bc ) -eq "1" ]]; then
		usr_values='0'"${user_values[$i]}"
	else
		usr_values="${user_values[$i]}"
	fi
	temp_effect="$temp_effect"' '"$usr_values"
	i=$[$i+1]
done
echo $temp_effect > temp.effect
killall play
play -q test.wav $( cat temp.effect) &
unset i
unset index
unset usr_values
}

### Function KeyPress #####################################
# reminder
# effect_options=()
# user_values=(0 0 0 0 0 0 0 0 0 0 )
# max_values=()
# step_size=(

function keypress {
  if [[ "$1" = "q" ]]; then stop=1
elif [[ "$1" = "p" ]]; then sox_play
elif [[ "$1" = 1 ]]; then preload 1
elif [[ "$1" = 2 ]]; then preload 2
elif [[ "$1" = 3 ]]; then preload 3
elif [[ "$1" = 4 ]]; then preload 4
elif [[ "$1" = 5 ]]; then preload 5
elif [[ "$1" = 6 ]]; then preload 6
elif [[ "$1" = 7 ]]; then preload 7
elif [[ "$1" = 8 ]]; then preload 8
elif [[ "$1" = 9 ]]; then preload 9
elif [[ "$1" = 10 ]]; then preload 10
fi

i=0
y=0
index=${#bank_key[*]}
while [[ "$i" -lt "$index" ]]; do
	if [[ "$1" = "${bank_key[$i]}" ]]; then
		if [[ $( echo "$i % 2" | bc ) -eq "0" ]]; then
		        if [[ $( echo "${user_values[$y]} < ${max_values[$y]}" |bc ) -eq "1" ]]; then user_values[$y]=$( echo "${user_values[$y]}+${step_size[$y]}" | bc ); fi
		else
		        if [[ $( echo "${user_values[$y]} > 0" |bc ) -eq "1" ]]; then user_values[$y]=$( echo "${user_values[$y]}-${step_size[$y]}" | bc ); fi
		fi
		break
	fi
	i=$[$i+1]
	if [[ $( echo "$i % 2" | bc ) -eq "0" ]]; then y=$[$y+1]; fi
done
unset i
unset index
}
### Working zone ##########################################
clear
stop=0
while [[ "$stop" = 0 ]]; do
	header
	build_gui
	footer
	read -n 1 key
	keypress $key
	clear
done
