#!/bin/bash

################################################################################
clear && printf "Welcome to Sf2_Batch_Recording 

this script let you make some nice wave files from sf2 
it is only a bash script for making some samples for the SamplerBox including definition
text file. 

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!											!
! Note, this will take a long time. A simple example:					!
!											!
! This script needs about 1 second to run. Because of waiting till fluidsynth is started!
! and sendmidi is connected. This will happen every note.				!
! 											!
! You want have 127 notes in one velocity and every sample will have 14 seconds 	!
!											!
! 14 sec sample + 1 sec script x 127 samples / 60 sec = 32 Minutes !			!
!											!
! Test it first with one or two notes							!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


"
################################################################################

### Some software tests #######################################################

if [[ -z $(screen -v 2>&1 | sed '/command not found/d') ]]
	then
	printf "screen is not installed, try to install it via homebrew"
	exit 0
fi

if [[ -z $(fluidsynth -V 2>&1 | sed '/command not found/d') ]]
        then
        printf "fluidsynth is not installed, try to install it via homebrew"
        exit 0
fi

if [[ -z $(sendmidi --version  2>&1 | sed '/command not found/d') ]]
        then
        printf "sendmidi is not installed, try to install it via homebrew"
        exit 0
fi

if [[ -z $(sox --version 2>&1 | sed '/command not found/d') ]]
        then
        printf "sox is not installed, try to install it via homebrew"
        exit 0
fi


### Set folder for banks, read content and ask user to choose one ##############

BKFOLDER='/Library/Audio/Sounds/Banks/'
ls $BKFOLDER | cut -d "." -f 1 > /var/tmp/Banks_
cat -n /var/tmp/Banks_
printf 'Choose a soundbank in integer:'
read CHOOSEBANK
if [[ -z "$CHOOSEBANK" ]]
	then
	printf "Soundbank required....exiting\n"
	exit 0
fi
SOUNDBANK=$(tail +$CHOOSEBANK /var/tmp/Banks_ | head -1)
mkdir $SOUNDBANK
BKFOLDER=$BKFOLDER""$SOUNDBANK
echo $BKFOLDER

### Set velocity and make the folder ###########################################
y=-1
while [[ "$y" -lt 0 || "$y" -gt 127 ]]
	do
	printf 'Choose a velocity between 0 and 127 or press enter for 127: '
	read y
	if [[ -z $y ]]
		then
		y=127
	fi
done
printf "The velocity is set to $y\n\n"


### define key range ###########################################################
a=-1
while [[ "$a" -lt 0 || "$a" -gt 127 ]]
	do
	printf 'Choose the beginning key no. between 0 and 127 or press enter for 0: '
	read a
	if [[ -z $a ]]
		then
		a=0
	fi
done
printf "We will begin with key $a\n\n"

b=-1
while [[ "$b" -lt 0 || "$b" -gt 127 ]]
	do
	printf 'Choose the end key no. between 0 and 127 or press enter for 127: '
	read b
	if [[ -z $b ]]
		then
		b=127
	fi
done
printf "We will end with key $b\n\n"

b=$[$b+1]


### define sample length #######################################################

while [[ "$time" -lt 1 ]]
	do
	printf 'Choose the sample length in full seconds(i will do 13 seconds): '
	read time
done
printf "Sample length will be $time seconds\n\n"

### Debug play #################################################################
printf 'Do you want to play every note past conversation? This will double the duration.
yes or enter for no '
read debug

### Fluidsynth Gain ############################################################
fgain=-1
while [[ "$fgain" -lt 0 || "$fgain" -gt 5 ]]
	do
	printf 'please enter gain for fluidsynth between 0 and 5,  Or press enter for gain 1: '
	read fgain
	if [[ -z $fgain ]]
		then 
		fgain=1
	fi
done

### Definition text file #######################################################
printf "Writing definition file\n"
echo "%midinote_%velocity.wav" > $SOUNDBANK/definition.txt

### Working zone ###############################################################

while [[ "$a" != "$b" ]]
	do
	### Fluidsynth #########################################################
	filename=$a"_"$y
	printf "start FluidSynth"
	screen -d -m /usr/local/Cellar/fluid-synth/1.1.6/bin/fluidsynth -g $fgain -a file $BKFOLDER -o audio.file.name=$SOUNDBANK/temp.raw
	fluidsynth_is_running="" 
	while [[ -z "$fluidsynth_is_running" ]]
		do
		printf "."
		fluidsynth_is_running=$(pgrep fluidsynth > $SOUNDBANK/fluidsynth.pid && echo "1")
	done
	### Sendmidi ###########################################################
	printf "wait for sendmidi"
	sendmidi dev fluidsynth 2> /var/tmp/sendmidi_con
	sle=$(cat /var/tmp/sendmidi_con)
	while [[ "$sle" != "" ]]
        	do
	        printf "."
	        sendmidi dev fluidsynth 2> /var/tmp/sendmidi_con
	        sle=$(cat /var/tmp/sendmidi_con)
	done

	printf "sending tone -key $a -velocity $y for $time sec\n"
	sendmidi dev fluidsynth on $a $y
	sleep $time
	printf "kill fluidsynth..."
	killall fluidsynth
	a=$[$a+1]
	### Sox ################################################################	
	printf "converting soundsample..."
	sox -r 44100 -c 2 -b 16  -e signed-integer $SOUNDBANK/temp.raw $SOUNDBANK/temp.wav
	file_length=$(sox $SOUNDBANK/temp.wav -n stat 2>&1 |grep Length |sed -n 's#^Length (seconds):[^0-9]*\([0-9.]*\)$#\1#p')
	z=$(echo "$file_length-$time" | bc)
	echo "trim the file from $z"
	sox $SOUNDBANK/temp.wav $SOUNDBANK/$filename.wav trim $z
	rm $SOUNDBANK/temp.raw
	printf "done\n"
	if [[ $debug = "yes" ]]
		then
		play $SOUNDBANK/$filename.wav
	fi
done
### cleaning files ##############################################################
rm /var/tmp/Banks_
rm $SOUNDBANK/temp.*
rm $SOUNDBANK/fluidsynth.pid
unset BKFOLDER
unset SOUNDBANK
unset CHOOSEBANK
unset time
unset a
unset b
unset y
unset z
unset sle
unset debug
unset fgain

